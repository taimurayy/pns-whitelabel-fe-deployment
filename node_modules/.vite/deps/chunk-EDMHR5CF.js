import {
  ArrowDropDown_default,
  Input_default,
  NativeSelectInput_default,
  getNativeSelectUtilityClasses,
  init_ArrowDropDown,
  init_Input,
  init_NativeSelectInput,
  init_nativeSelectClasses,
  nativeSelectClasses_default
} from "./chunk-OQNJF3PU.js";
import {
  formControlState,
  init_formControlState
} from "./chunk-CHE7CS64.js";
import {
  init_useFormControl,
  useFormControl
} from "./chunk-6CA2LNQM.js";
import {
  init_useThemeProps,
  useThemeProps
} from "./chunk-GSOLHIEV.js";
import {
  clsx_default,
  composeClasses,
  init_clsx,
  init_composeClasses
} from "./chunk-7P3FFUSY.js";
import {
  require_prop_types
} from "./chunk-J4LPPHPF.js";
import {
  require_jsx_runtime
} from "./chunk-OT5EQO2H.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __esm,
  __export,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@mui/material/NativeSelect/NativeSelect.js
var React, import_prop_types, import_jsx_runtime, useUtilityClasses, defaultInput, NativeSelect, NativeSelect_default;
var init_NativeSelect = __esm({
  "node_modules/@mui/material/NativeSelect/NativeSelect.js"() {
    "use client";
    React = __toESM(require_react());
    init_clsx();
    import_prop_types = __toESM(require_prop_types());
    init_composeClasses();
    init_NativeSelectInput();
    init_formControlState();
    init_useFormControl();
    init_ArrowDropDown();
    init_Input();
    init_useThemeProps();
    init_nativeSelectClasses();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    useUtilityClasses = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"]
      };
      return composeClasses(slots, getNativeSelectUtilityClasses, classes);
    };
    defaultInput = (0, import_jsx_runtime.jsx)(Input_default, {});
    NativeSelect = React.forwardRef(function NativeSelect2(inProps, ref) {
      const props = useThemeProps({
        name: "MuiNativeSelect",
        props: inProps
      });
      const {
        className,
        children,
        classes: classesProp = {},
        IconComponent = ArrowDropDown_default,
        input = defaultInput,
        inputProps,
        variant,
        ...other
      } = props;
      const muiFormControl = useFormControl();
      const fcs = formControlState({
        props,
        muiFormControl,
        states: ["variant"]
      });
      const ownerState = {
        ...props,
        classes: classesProp
      };
      const classes = useUtilityClasses(ownerState);
      const {
        root,
        ...otherClasses
      } = classesProp;
      return (0, import_jsx_runtime.jsx)(React.Fragment, {
        children: React.cloneElement(input, {
          // Most of the logic is implemented in `NativeSelectInput`.
          // The `Select` component is a simple API wrapper to expose something better to play with.
          inputComponent: NativeSelectInput_default,
          inputProps: {
            children,
            classes: otherClasses,
            IconComponent,
            variant: fcs.variant,
            type: void 0,
            // We render a select. We can ignore the type provided by the `Input`.
            ...inputProps,
            ...input ? input.props.inputProps : {}
          },
          ref,
          ...other,
          className: clsx_default(classes.root, input.props.className, className)
        })
      });
    });
    true ? NativeSelect.propTypes = {
      // ┌────────────────────────────── Warning ──────────────────────────────┐
      // │ These PropTypes are generated from the TypeScript type definitions. │
      // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
      // └─────────────────────────────────────────────────────────────────────┘
      /**
       * The option elements to populate the select with.
       * Can be some `<option>` elements.
       */
      children: import_prop_types.default.node,
      /**
       * Override or extend the styles applied to the component.
       * @default {}
       */
      classes: import_prop_types.default.object,
      /**
       * @ignore
       */
      className: import_prop_types.default.string,
      /**
       * The icon that displays the arrow.
       * @default ArrowDropDownIcon
       */
      IconComponent: import_prop_types.default.elementType,
      /**
       * An `Input` element; does not have to be a material-ui specific `Input`.
       * @default <Input />
       */
      input: import_prop_types.default.element,
      /**
       * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
       */
      inputProps: import_prop_types.default.object,
      /**
       * Callback fired when a menu item is selected.
       *
       * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
       * You can pull out the new value by accessing `event.target.value` (string).
       */
      onChange: import_prop_types.default.func,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
      /**
       * The `input` value. The DOM API casts this to a string.
       */
      value: import_prop_types.default.any,
      /**
       * The variant to use.
       */
      variant: import_prop_types.default.oneOf(["filled", "outlined", "standard"])
    } : void 0;
    NativeSelect.muiName = "Select";
    NativeSelect_default = NativeSelect;
  }
});

// node_modules/@mui/material/NativeSelect/index.js
var NativeSelect_exports = {};
__export(NativeSelect_exports, {
  default: () => NativeSelect_default,
  getNativeSelectUtilityClasses: () => getNativeSelectUtilityClasses,
  nativeSelectClasses: () => nativeSelectClasses_default
});
var init_NativeSelect2 = __esm({
  "node_modules/@mui/material/NativeSelect/index.js"() {
    init_NativeSelect();
    init_nativeSelectClasses();
    init_nativeSelectClasses();
  }
});

export {
  NativeSelect_default,
  NativeSelect_exports,
  init_NativeSelect2 as init_NativeSelect
};
//# sourceMappingURL=chunk-EDMHR5CF.js.map
