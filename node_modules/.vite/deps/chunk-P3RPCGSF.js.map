{
  "version": 3,
  "sources": ["../../@mui/material/GlobalStyles/GlobalStyles.js", "../../@mui/material/GlobalStyles/index.js", "../../@mui/material/zero-styled/index.js"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;", "export { default } from \"./GlobalStyles.js\";", "import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,SAAS,aAAa,OAAO;AAC3B,aAAoB,mBAAAA,KAAK,sBAAoB;AAAA,IAC3C,GAAG;AAAA,IACH,cAAc;AAAA,IACd,SAAS;AAAA,EACX,CAAC;AACH;AAdA,IAEA,OACA,mBAIA,oBAkBOC;AAzBP;AAAA;AAAA;AAEA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AACA;AACA,yBAA4B;AAQ5B,WAAwC,aAAa,YAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQtF,QAAQ,kBAAAC,QAAgD,UAAU,CAAC,kBAAAA,QAAU,OAAO,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,IAAI,CAAC;AAAA,IAC3K,IAAI;AACJ,IAAOD,wBAAQ;AAAA;AAAA;;;ACzBf,IAAAE,qBAAA;AAAA;AAAA;AAAA;AAAA;;;ACOO,SAAS,UAAU,QAAQ;AAChC,SAAO,SAAS,oBAAoB,OAAO;AACzC;AAAA;AAAA,UAGE,oBAAAC,KAAKC,uBAAc;AAAA,QACjB,QAAQ,OAAO,WAAW,aAAa,WAAS,OAAO;AAAA,UACrD;AAAA,UACA,GAAG;AAAA,QACL,CAAC,IAAI;AAAA,MACP,CAAC;AAAA;AAAA,EAEL;AACF;AAGO,SAAS,8BAA8B;AAC5C,SAAO;AACT;AAzBA,IAAAC,QAIAC;AAJA;AAAA;AAAA,IAAAD,SAAuB;AACvB;AACA;AACA,IAAAE;AACA,IAAAD,sBAA4B;AAC5B;AACA;AAAA;AAAA;",
  "names": ["_jsx", "GlobalStyles_default", "PropTypes", "init_GlobalStyles", "_jsx", "GlobalStyles_default", "React", "import_jsx_runtime", "init_GlobalStyles"]
}
